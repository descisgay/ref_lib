-- local variables for API functions. any changes to the line below will be lost on re-generation
local ui_reference = ui.reference

local ragebot = {
    enabled = { ui_reference("RAGE", "Aimbot", "Enabled") },
    target_selection = ui_reference("RAGE", "Aimbot", "Target selection"),
    target_hitbox = ui_reference("RAGE", "Aimbot", "Target hitbox"),
    multipoint = { ui_reference("RAGE", "Aimbot", "Multi-point") },
    multipoint_scale = ui_reference("RAGE", "Aimbot", "Multi-point scale"),
    prefer_safepoint = ui_reference("RAGE", "Aimbot", "Prefer safe point"),
    force_safepoint = ui_reference("RAGE", "Aimbot", "Force safe point"),
    avoid_unsafe_hitboxes = ui_reference("RAGE", "Aimbot", "Avoid unsafe hitboxes"),
    automatic_fire = ui_reference("RAGE", "Aimbot", "Automatic fire"),
    automatic_penetration = ui_reference("RAGE", "Aimbot", "Automatic penetration"),
    silent_aim = ui_reference("RAGE", "Aimbot", "Silent aim"),
    hitchance = ui_reference("RAGE", "Aimbot", "Minimum hit chance"),
    minimum_damage = ui_reference("RAGE", "Aimbot", "Minimum damage"),
    auto_scope = ui_reference("RAGE", "Aimbot", "Automatic scope"),
    reduce_aim_step = ui_reference("RAGE", "Aimbot", "Reduce aim step"),
    maximum_fov = ui_reference("RAGE", "Aimbot", "Maximum FOV"),
    log_misses_due_to_spread = ui_reference("RAGE", "Aimbot", "Log misses due to spread"),
    low_fps_mitigations = ui_reference("RAGE", "Aimbot", "Low FPS mitigations"),
    remove_recoil = ui_reference("RAGE", "Other", "Remove recoil"),
    accuracy_boost = ui_reference("RAGE", "Other", "Accuracy boost"),
    delay_shot = ui_reference("RAGE", "Other", "Delay shot"),
    quick_stop = { ui_reference("RAGE", "Other", "Quick stop") },
    quick_stop_options = ui_reference("RAGE", "Other", "Quick stop options"),
    quick_peek_assist = { ui_reference("RAGE", "Other", "Quick peek assist") },
    quick_peek_assist_mode = { ui_reference("RAGE", "Other", "Quick peek assist mode") },
    quick_peek_assist_distance = ui_reference("RAGE", "Other", "Quick peek assist distance"),
    resolver = ui_reference("RAGE", "Other", "Anti-aim correction"),
    resolver_override = ui_reference("RAGE", "Other", "Anti-aim correction override"),
    prefer_body_aim = ui_reference("RAGE", "Other", "Prefer body aim"),
    prefer_body_aim_disablers = ui_reference("RAGE", "Other", "Prefer body aim disablers"),
    force_body_aim = ui_reference("RAGE", "Other", "Force body aim"),
    force_body_aim_on_peek = ui_reference("RAGE", "Other", "Force body aim on peek"),
    duck_peek_assist = ui_reference("RAGE", "Other", "Duck peek assist"),
    double_tap = { ui_reference("RAGE", "Other", "Double tap") },
    double_tap_mode = ui_reference("RAGE", "Other", "Double tap mode"),
    double_tap_hitchance = ui_reference("RAGE", "Other", "Double tap hit chance"),
    double_tap_fake_lag_limit = ui_reference("RAGE", "Other", "Double tap fake lag limit"),
    double_tap_quick_stop = ui_reference("RAGE", "Other", "Double tap quick stop")
}

local antiaim = {
    enabled = ui_reference("AA", "Anti-aimbot angles", "Enabled"),
    pitch = ui_reference("AA", "Anti-aimbot angles", "Pitch"),
    yaw_base = ui_reference("AA", "Anti-aimbot angles", "Yaw base"),
    yaw = { ui_reference("AA", "Anti-aimbot angles", "Yaw") },
    yaw_jitter = { ui_reference("AA", "Anti-aimbot angles", "Yaw jitter") } ,
    body_yaw = { ui_reference("AA", "Anti-aimbot angles", "Body yaw") },
    freestanding_body_yaw = ui_reference("AA", "Anti-aimbot angles", "Freestanding body yaw"),
    fake_yaw_limit = ui_reference("AA", "Anti-aimbot angles", "Fake yaw limit"),
    edge_yaw = ui_reference("AA", "Anti-aimbot angles", "Edge yaw"),
    freestanding = { ui_reference("AA", "Anti-aimbot angles", "Freestanding") },
    slow_motion = { ui_reference("AA", "Other", "Slow motion") },
    slow_motion_type = ui_reference("AA", "Other", "Slow motion type"),
    leg_movement = ui_reference("AA", "Other", "Leg movement"),
    hide_shots = { ui_reference("AA", "Other", "On shot anti-aim") },
    fake_peek = { ui_reference("AA", "Other", "Fake peek") }
}

local fakelag = {
    enabled = { ui_reference("AA", "Fake lag", "Enabled") },
    amount = ui_reference("AA", "Fake lag", "Amount"),
    variance = ui_reference("AA", "Fake lag", "Variance"),
    limit = ui_reference("AA", "Fake lag", "Limit")
}

local legitaimbot = {
    enabled = ui_reference("LEGIT", "Aimbot", "Enabled"),
    speed = ui_reference("LEGIT", "Aimbot", "Speed"),
    speed_in_attack = ui_reference("LEGIT", "Aimbot", "Speed (in attack)"),
    speed_scale_fov = ui_reference("LEGIT", "Aimbot", "Speed scale - FOV"),
    maximum_lock_on_time = ui_reference("LEGIT", "Aimbot", "Maximum lock-on time"),
    reaction_time = ui_reference("LEGIT", "Aimbot", "Reaction time"),
    maximum_fov = ui_reference("LEGIT", "Aimbot", "Maximum FOV"),
    recoil_compensation = {ui_reference("LEGIT", "Aimbot", "Recoil compensation (P/Y)")},
    quick_stop = ui_reference("LEGIT", "Aimbot", "Quick stop"),
    aim_through_smoke = ui_reference("LEGIT", "Aimbot", "Aim through smoke"),
    aim_while_blind = ui_reference("LEGIT", "Aimbot", "Aim while blind"),
    head = ui_reference("LEGIT", "Aimbot", "Head"),
    chest = ui_reference("LEGIT", "Aimbot", "Chest"),
    stomach = ui_reference("LEGIT", "Aimbot", "Stomach"),
    accuracy_boost = ui_reference("LEGIT", "Other", "Accuracy boost"),
    accuracy_boost_range = ui_reference("LEGIT", "Other", "Accuracy boost range"),
    standalone_recoil_compensation = ui_reference("LEGIT", "Other", "Standalone recoil compensation"),
}

local triggerbot = {
    enabled = {ui_reference("LEGIT", "Triggerbot", "Enabled")},
    minimum_hitchance = ui_reference("LEGIT", "Triggerbot", "Minimum hit chance"),
    reaction_time = ui_reference("LEGIT", "Triggerbot", "Reaction time"),
    burst_fire = {ui_reference("LEGIT", "Triggerbot", "Burst fire")},
    minimum_damage = ui_reference("LEGIT", "Triggerbot", "Minimum damage"),
    automatic_penetration = ui_reference("LEGIT", "Triggerbot", "Automatic penetration"),
    shoot_through_smoke = ui_reference("LEGIT", "Triggerbot", "Shoot through smoke"),
    shoot_while_blind = ui_reference("LEGIT", "Triggerbot", "Shoot while blind"),
    head = ui_reference("LEGIT", "Triggerbot", "Head"),
    chest = ui_reference("LEGIT", "Triggerbot", "Chest"),
    stomach = ui_reference("LEGIT", "Triggerbot", "Stomach"),
}

local visuals = {
    activation_type = ui_reference("VISUALS", "Player ESP", "Activation type"),
    teammates = ui_reference("VISUALS", "Player ESP", "Teammates"),
    dormant = ui_reference("VISUALS", "Player ESP", "Dormant"),
    box = { ui_reference("VISUALS", "Player ESP", "Bounding box") },
    health = ui_reference("VISUALS", "Player ESP", "Health bar"),
    name = ui_reference("VISUALS", "Player ESP", "Name"),
    flags = ui_reference("VISUALS", "Player ESP", "Flags"),
    weapon_text = ui_reference("VISUALS", "Player ESP", "Weapon text"),
    weapon_icon = { ui_reference("VISUALS", "Player ESP", "Weapon icon") },
    ammo = { ui_reference("VISUALS", "Player ESP", "Ammo") },
    distance = ui_reference("VISUALS", "Player ESP", "Distance"),
    glow = { ui_reference("VISUALS", "Player ESP", "Glow") },
    hit_marker = ui_reference("VISUALS", "Player ESP", "Hit marker"),
    hit_marker_sound = ui_reference("VISUALS", "Player ESP", "Hit marker sound"),
    visualize_aimbot = { ui_reference("VISUALS", "Player ESP", "Visualize aimbot") },
    visualize_aimbot_sp = { ui_reference("VISUALS", "Player ESP", "Visualize aimbot (safe point)") },
    visualize_sounds = { ui_reference("VISUALS", "Player ESP", "Visualize sounds") },
    line_of_sight = { ui_reference("VISUALS", "Player ESP", "Line of sight") },
    money = ui_reference("VISUALS", "Player ESP", "Money"),
    skeleton = { ui_reference("VISUALS", "Player ESP", "Skeleton") },
    out_of_fov_arrow = { ui_reference("VISUALS", "Player ESP", "Out of FOV arrow") },
    radar = ui_reference("VISUALS", "Other ESP", "Radar"),
    dropped_weapons = { ui_reference("VISUALS", "Other ESP", "Dropped weapons") },
    grenades = { ui_reference("VISUALS", "Other ESP", "Grenades") },
    inaccuracy_overlay = { ui_reference("VISUALS", "Other ESP", "Inaccuracy overlay") },
    recoil_overlay = ui_reference("VISUALS", "Other ESP", "Recoil overlay"),
    crosshair = ui_reference("VISUALS", "Other ESP", "Crosshair"),
    bomb = { ui_reference("VISUALS", "Other ESP", "Bomb") },
    grenade_trajectory = { ui_reference("VISUALS", "Other ESP", "Grenade trajectory") },
    grenade_trajectory_hit = ui_reference("VISUALS", "Other ESP", "Grenade trajectory (hit)"),
    grenade_proximity_warning = ui_reference("VISUALS", "Other ESP", "Grenade proximity warning"),
    spectators = ui_reference("VISUALS", "Other ESP", "Spectators"),
    penetration_reticle = ui_reference("VISUALS", "Other ESP", "Penetration reticle"),
    hostages = { ui_reference("VISUALS", "Other ESP", "Hostages") },
    shared_esp = { ui_reference("VISUALS", "Other ESP", "Shared ESP") },
    shared_esp_with_other_team = ui_reference("VISUALS", "Other ESP", "Shared ESP with other team"),
    restrict_shared_esp_updates = ui_reference("VISUALS", "Other ESP", "Restrict shared ESP updates"),
    upgrade_tablet = ui_reference("VISUALS", "Other ESP", "Upgrade tablet"),
    danger_zone_items = ui_reference("VISUALS", "Other ESP", "Danger Zone items"),
    drone_gun = { ui_reference("VISUALS", "Other ESP", "Drone gun") },
    blackhawk = { ui_reference("VISUALS", "Other ESP", "Blackhawk") },
    drone = { ui_reference("VISUALS", "Other ESP", "Drone") },
    random_case = { ui_reference("VISUALS", "Other ESP", "Random case") },
    tool_case = { ui_reference("VISUALS", "Other ESP", "Tool case") },
    pistol_case = { ui_reference("VISUALS", "Other ESP", "Pistol case") },
    explosive_case = { ui_reference("VISUALS", "Other ESP", "Explosive case") },
    heavy_weapon_case = { ui_reference("VISUALS", "Other ESP", "Heavy weapon case") },
    light_weapon_case = { ui_reference("VISUALS", "Other ESP", "Light weapon case") },
    dufflebag = { ui_reference("VISUALS", "Other ESP", "Dufflebag") },
    jammer = { ui_reference("VISUALS", "Other ESP", "Jammer") },
    ammobox = { ui_reference("VISUALS", "Other ESP", "Ammobox") },
    armor = { ui_reference("VISUALS", "Other ESP", "Armor") },
    parachute_pack = { ui_reference("VISUALS", "Other ESP", "Parachute pack") },
    briefcase = { ui_reference("VISUALS", "Other ESP", "Briefcase") },
    tablet_upgrade_zone = { ui_reference("VISUALS", "Other ESP", "Tablet upgrade zone") },
    tablet_upgrade_drone = { ui_reference("VISUALS", "Other ESP", "Tablet upgrade drone") },
    cash_stack = { ui_reference("VISUALS", "Other ESP", "Cash stack") },
    remove_flashbang_effects = ui_reference("VISUALS", "Effects", "Remove flashbang effects"),
    remove_smoke_grenades = ui_reference("VISUALS", "Effects", "Remove smoke grenades"),
    remove_fog = ui_reference("VISUALS", "Effects", "Remove fog"),
    remove_skybox = ui_reference("VISUALS", "Effects", "Remove skybox"),
    visual_recoil_adjustment = ui_reference("VISUALS", "Effects", "Visual recoil adjustment"),
    transparent_walls = ui_reference("VISUALS", "Effects", "Transparent walls"),
    transparent_props = ui_reference("VISUALS", "Effects", "Transparent props"),
    brightness_adjustment = { ui_reference("VISUALS", "Effects", "Brightness adjustment") },
    remove_scope_overlay = ui_reference("VISUALS", "Effects", "Remove scope overlay"),
    instant_scope = ui_reference("VISUALS", "Effects", "Instant scope"),
    disable_post_processing = ui_reference("VISUALS", "Effects", "Disable post processing"),
    force_third_person_alive = { ui_reference("VISUALS", "Effects", "Force third person (alive)") },
    force_third_person_dead = ui_reference("VISUALS", "Effects", "Force third person (dead)"),
    disable_rendering_of_teammates = ui_reference("VISUALS", "Effects", "Disable rendering of teammates"),
    disable_rendering_of_ragdolls = ui_reference("VISUALS", "Effects", "Disable rendering of ragdolls"),
    bullet_tracers = { ui_reference("VISUALS", "Effects", "Bullet tracers") },
    bullet_impacts = { ui_reference("VISUALS", "Effects", "Bullet impacts") }
}

local chams = {
    player = { ui_reference("VISUALS", "Colored models", "Player") },
    player_behind_wall = { ui_reference("VISUALS", "Colored models", "Player behind wall") },
    teammate = { ui_reference("VISUALS", "Colored models", "Teammate") },
    teammate_behind_wall = { ui_reference("VISUALS", "Colored models", "Teammate behind wall") },
    local_player = { ui_reference("VISUALS", "Colored models", "Local player") },
    local_player_fake = { ui_reference("VISUALS", "Colored models", "Local player fake") },
    on_shot = { ui_reference("VISUALS", "Colored models", "On shot") },
    ragdolls = ui_reference("VISUALS", "Colored models", "Ragdolls"),
    hands = { ui_reference("VISUALS", "Colored models", "Hands") },
    weapon_viewmodel = { ui_reference("VISUALS", "Colored models", "Weapon viewmodel") },
    weapons = { ui_reference("VISUALS", "Colored models", "Weapons") },
    disable_model_occlusion = ui_reference("VISUALS", "Colored models", "Disable model occlusion"),
    shadow = { ui_reference("VISUALS", "Colored models", "Shadow") },
    props = { ui_reference("VISUALS", "Colored models", "Props") }
}

local misc = {
    override_fov = ui_reference("MISC", "Miscellaneous", "Override FOV"),
    override_zoom_fov = ui_reference("MISC", "Miscellaneous", "Override zoom FOV"),
    knifebot = { ui_reference("MISC", "Miscellaneous", "Knifebot") },
    zeusbot = ui_reference("MISC", "Miscellaneous", "Zeusbot"),
    automatic_weapons = { ui_reference("MISC", "Miscellaneous", "Automatic weapons") },
    reveal_competitive_ranks = ui_reference("MISC", "Miscellaneous", "Reveal competitive ranks"),
    reveal_overwatch_players = ui_reference("MISC", "Miscellaneous", "Reveal Overwatch players"),
    auto_accept_matchmaking = ui_reference("MISC", "Miscellaneous", "Auto-accept matchmaking"),
    clantag_spammer = ui_reference("MISC", "Miscellaneous", "Clan tag spammer"),
    log_weapon_purchases = ui_reference("MISC", "Miscellaneous", "Log weapon purchases"),
    log_damage_dealt = ui_reference("MISC", "Miscellaneous", "Log damage dealt"),
    automatic_grenade_release = { ui_reference("MISC", "Miscellaneous", "Automatic grenade release") },
    ping_spike = { ui_reference("MISC", "Miscellaneous", "Ping spike") } ,
    free_look = ui_reference("MISC", "Miscellaneous", "Free look"),
    persistent_killfeed = ui_reference("MISC", "Miscellaneous", "Persistent kill feed"),
    last_second_defuse = ui_reference("MISC", "Miscellaneous", "Last second defuse"),
    disable_sv_pure = ui_reference("MISC", "Miscellaneous", "Disable sv_pure"),
    unlock_hidden_cvars = ui_reference("MISC", "Miscellaneous", "Unlock hidden cvars"),
    standalone_quick_stop = ui_reference("MISC", "Movement", "Standalone quick stop"),
    infinite_duck = ui_reference("MISC", "Movement", "Infinite duck"),
    easy_strafe = ui_reference("MISC", "Movement", "Easy strafe"),
    bunny_hop = ui_reference("MISC", "Movement", "Bunny hop"),
    air_strafe = ui_reference("MISC", "Movement", "Air strafe"),
    air_strafe_direction = ui_reference("MISC", "Movement", "Air strafe direction"),
    air_strafe_smoothing = ui_reference("MISC", "Movement", "Air strafe smoothing"),
    avoid_collisions = ui_reference("MISC", "Movement", "Avoid collisions"),
    zhop = { ui_reference("MISC", "Movement", "Z-Hop") },
    pre_speed = { ui_reference("MISC", "Movement", "Pre-speed") },
    no_fall_damage = { ui_reference("MISC", "Movement", "No fall damage") },
    air_duck = ui_reference("MISC", "Movement", "Air duck"),
    blockbot = { ui_reference("MISC", "Movement", "Blockbot") },
    jump_at_edge = { ui_reference("MISC", "Movement", "Jump at edge") },
    fast_walk = ui_reference("MISC", "Movement", "Fast walk"),
    menu_key = ui_reference("MISC", "Settings", "Menu key"),
    menu_color = ui_reference("MISC", "Settings", "Menu color"),
    dpi_scale = ui_reference("MISC", "Settings", "DPI scale"),
    anti_untrusted = ui_reference("MISC", "Settings", "Anti-untrusted"),
    hide_from_obs = ui_reference("MISC", "Settings", "Hide from OBS"),
    low_fps_warning = ui_reference("MISC", "Settings", "Low FPS warning"),
    lock_menu_layout = ui_reference("MISC", "Settings", "Lock menu layout"),
    sv_maxusrcmdprocessticks = ui_reference("MISC", "Settings", "sv_maxusrcmdprocessticks"),
    sv_maxunlag = ui_reference("MISC", "Settings", "sv_maxunlag")
}

local skinchanger = {
    override_knife = {ui_reference("SKINS", "Knife options", "Override knife")},
    enabled = ui_reference("SKINS", "Weapon skin", "Enabled"),
    stattrak = ui_reference("SKINS", "Weapon skin", "Stattrak"),
    quality = ui_reference("SKINS", "Weapon skin", "Quality"),
    seed = ui_reference("SKINS", "Weapon skin", "Seed"),
    filter_by_weapon = ui_reference("SKINS", "Weapon skin", "Filter by weapon"),
    skin = ui_reference("SKINS", "Weapon skin", "Skin"),
    override_gloves = {ui_reference("SKINS", "Glove options", "Override gloves")},
}

local plist = {
    add_to_whitelist = ui_reference("Players", "Adjustments", "Add to whitelist"),
    allow_shared_esp_updates = ui_reference("Players", "Adjustments", "Allow shared ESP updates"),
    disable_visuals = ui_reference("Players", "Adjustments", "Disable visuals"),
    high_priority = ui_reference("Players", "Adjustments", "High priority"),
    force_pitch = ui_reference("Players", "Adjustments", "Force pitch"),
    force_pitch_value = ui_reference("Players", "Adjustments", "Force pitch value"),
    force_body_yaw = ui_reference("Players", "Adjustments", "Force body yaw"),
    force_body_yaw_value = ui_reference("Players", "Adjustments", "Force body yaw value"),
    correction_active = ui_reference("Players", "Adjustments", "Correction active"),
    override_prefer_body_aim = ui_reference("Players", "Adjustments", "Override prefer body aim"),
    override_safe_point = ui_reference("Players", "Adjustments", "Override safe point"),
    apply_to_all = ui_reference("Players", "Adjustments", "Apply to all"),
}

return {
    ragebot = ragebot,
    antiaim = antiaim,
    legitaimbot = legitaimbot,
    triggerbot = triggerbot,
    fakelag = fakelag,
    visuals = visuals,
    chams = chams,
    misc = misc,
    skinchanger = skinchanger,
    plist = plist,
}
